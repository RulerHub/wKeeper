@page "/"

@using Microsoft.AspNetCore.Identity

@using RulerHub.Shared.Entities.Enterprises

@using RulerHub.Shared.Entities.Identity

@using WKeeper.Data.Services.Warehouses.Implements

@inject NavigationManager NavigationManager

@inject WarehouseService WarehouseService

@inject AuthenticationStateProvider AuthenticationStateProvider

@inject UserManager<ApplicationUser> UserManager

@attribute [StreamRendering]

@if (_enterprice is null)
{
    <PageTitle>Home | wKeeper</PageTitle>
}
else
{
    <PageTitle>Home | @_enterprice.Name</PageTitle>
}

<AuthorizeView>
    <Authorized>
        @if (_enterprice is null)
        {
            <p><em>Loading...</em></p>
            <h1>Create one</h1>
        }
        else
        {
            <h1>@_enterprice.Name</h1>
            <p>@_enterprice.Description</p>
            <small>@_enterprice.DateCreate</small>
            <FluentButton OnClick="GoToWarehouse">Manage</FluentButton>
        }
    </Authorized>
    <NotAuthorized>
        Debes Logearte
    </NotAuthorized>
</AuthorizeView>

@code {
    private Enterprise? _enterprice { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        await Task.Delay(500);

        if (user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if (appUser != null)
            {
                _enterprice = await WarehouseService.GetEnterprise();
            }
        }
    }

    public void GoToWarehouse()
    {
        NavigationManager.NavigateTo("/warehouse/home");
    }
}