@using WKeeper.Web.Components.Settings.Pages.Notifications
@inherits LayoutComponentBase

@implements IDisposable
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<FluentLayout>
    <FluentHeader>
        wKeeper.Web
        <FluentMessageBarProvider Section="MESSAGE_SECTION" Format="MessageFormat.Notification" />

        <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                     VerticalAlignment="@VerticalAlignment.Center"
                     Style="height: 48px;padding-inline-end: 10px; ">
            <AuthorizeView>
                <Authorized>
                    <FluentProfileMenu Image="Picture/gripen.jpg"
                                       Status="@PresenceStatus.Available"
                                       HeaderLabel="RulerHub Projects"
                                       FullName="@context.User.Identity?.Name"
                                       EMail="@context.User.Identity?.Name"
                                       PopoverStyle="min-width: 330px;"
                                       FooterLink="Manage"
                                       OnFooterLinkClick="AccountManage" />


                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Neutral" Style="width: 100%;" IconStart="new Icons.Regular.Size20.ArrowExit()"></FluentButton>
                    </form>
                    <NotificationCenter/>
                </Authorized>
                <NotAuthorized>
                    <FluentPersona Name="Log In"
                                   Status="PresenceStatus.Offline"
                                   StatusSize="PresenceBadgeSize.Small"
                                   StatusTitle="Connect to an account"
                                   Image="@(new Icons.Regular.Size48.Person().ToDataUri(size: "25px", color: "white"))"
                                   ImageSize="35px">
                        <FluentNavLink Href="Account/Register">Register</FluentNavLink>
                        <FluentNavLink Href="Account/Login">Login</FluentNavLink>
                    </FluentPersona>
                </NotAuthorized>
            </AuthorizeView>
        </FluentStack>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                <FluentMessageBarProvider Section="MESSAGES_TOP" />
                @Body
            </div>
        </FluentBodyContent>
        <FluentDialogProvider />
        <FluentToastProvider MaxToastCount="10" />
    </FluentStack>
    <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private string? currentUrl;
    bool? canceled;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void AccountManage()
    {
        NavigationManager.NavigateTo("Account/Manage");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}
