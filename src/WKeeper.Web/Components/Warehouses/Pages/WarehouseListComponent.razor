@inject IWarehouseService WarehouseService

@inject IDialogService DialogService

@inject IToastService ToastService

@attribute [StreamRendering]

<FluentToolbar Style="height: 48px;padding-inline-end: 10px; width: 100%;">
    <FluentButton OnClick="Create" IconStart="@(new Icons.Regular.Size20.AddCircle())">Create Warehouse</FluentButton>
    <FluentButton aria-label="Print" IconEnd="@(new Icons.Regular.Size16.Print())" />
    <FluentButton aria-label="Save" IconEnd="@(new Icons.Regular.Size16.Save())" />
    <FluentButton aria-label="Export" IconEnd="@(new Icons.Regular.Size16.ArrowExport())" />
    <FluentDivider Style="height: 24px;" Role="DividerRole.Presentation" Orientation="Orientation.Vertical"></FluentDivider>
    <div class="search-box" >
        <FluentSearch Style="width: 100%;" type="search" Autofocus=true @bind-Value=nameFilter @oninput="HandleNameFilter" AfterBindValue="HandleClear" Placeholder="Warehouse name..." />
    </div>
    <FluentDivider Style="height: 24px;" Role="DividerRole.Presentation" Orientation="Orientation.Vertical"></FluentDivider>
    <div>
        <FluentCheckbox @bind-Value="showCategories">Categories</FluentCheckbox>
        <FluentCheckbox @bind-Value="showDepartments">Departments</FluentCheckbox>
        <FluentCheckbox @bind-Value="showItems">Items</FluentCheckbox>
    </div>
</FluentToolbar>

<FluentPaginator State="@pagination" />

<div>
    <FluentDataGrid Id="warehousegrid"
                    Pagination="@pagination"
                    Items="@FilteredWarehouses"
                    
                    TGridItem="Warehouse">

        <PropertyColumn Title="Name" Property="@(c => c!.Name)" Sortable="true" Align="Align.Start" TooltipText="@(c => c!.Name)" Tooltip="true" />

        @if (showCategories)
        {
            <PropertyColumn Title="Categories" Property="@(c => c!.Categories.Count())" Sortable="false" Align="Align.End" />
        }

        @if (showDepartments)
        {
            <PropertyColumn Title="departments" Property="@(c => c!.Departments.Count())" Sortable="false" Align="Align.End" />
        }

        @if (showItems)
        {
            <PropertyColumn Title="Items" Property="@(c => c!.Items.Count())" Sortable="false" Align="Align.End" />
        }

        <PropertyColumn Title="Last Update" Property="@(c => c!.DateUpdate)" Sortable="false" Align="Align.End" />
        <PropertyColumn Title="Price" Property="@(c => c!.WarehousePrice)" Sortable="false" Align="Align.End" />

        <TemplateColumn Title="Actions" Align="@Align.End">

            @* <FluentMenuButton Text="Manage">
            <FluentMenuItem OnClick="@(() => Oversee(context))" IconEnd="@(new Icons.Regular.Size16.Eye())"></FluentMenuItem>
            <FluentMenuItem OnClick="@(() => Update(context))" IconEnd="@(new Icons.Regular.Size16.Edit())"></FluentMenuItem>
            <FluentMenuItem OnClick="@(() => Delete(context.Id, context.Name))" IconEnd="@(new Icons.Regular.Size16.Delete())"></FluentMenuItem>
        </FluentMenuButton> *@

            <FluentButton OnClick="@(() => Oversee(context))" aria-label="edit" IconEnd="@(new Icons.Regular.Size16.Eye())" />
            <FluentButton OnClick="@(() => Update(context))" aria-label="edit" IconEnd="@(new Icons.Regular.Size16.Edit())" />
            <FluentButton OnClick="@(() => Delete(context.Id, context.Name))" aria-label="delete" IconEnd="@(new Icons.Regular.Size16.Delete())" />
        </TemplateColumn>
    </FluentDataGrid>

</div>


