@implements IDisposable
@inject IDialogService DialogService
@inject IMessageService MessageService

<FluentButton BackgroundColor="var(--neutral-layer-4)" OnClick="OpenNotificationCenterAsync" Title="Notification center">
    @if (MessageService.Count("NOTIFICATION_CENTER") > 0)
    {
        <FluentCounterBadge Count="@MessageService.Count("NOTIFICATION_CENTER")"
                            Max="9"
                            ShowOverflow="true"
                            BackgroundColor="@Color.Error"
                            Color="Color.Fill"
                            Appearance="Appearance.Accent">
            <ChildContent>
                @NotificationIcon()
            </ChildContent>
        </FluentCounterBadge>
    }
    else
    {
        @NotificationIcon()
    }
</FluentButton>

@code{
    private RenderFragment NotificationIcon() =>
        @<FluentIcon Value="@(new Icons.Regular.Size20.Alert())" Color="Color.Neutral" Title="Notification center" />;
}
